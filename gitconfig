[user]
  name = Eric Ripa
  email = eric@ripa.io

[color]
  ui = auto
  
[gui]
  fontdiff = -family Monaco -size 10 -weight normal -slant roman -underline 0 -overstrike 0

[core]
  excludesfile = ~/.gitignore
  quotepath = false
  autocrlf = input
  safecrlf = warn
  editor = vim
  pager = less -+$LESS -RX

[alias]
  ###############
  ## shortcuts ##
  ###############
  br = branch -a
  s = status -s -u
  st = status
  cl = log --stat -C -2
  c = commit
  co = checkout
  ph = push
  pl = pull
  spull = !git-svn fetch && git-svn rebase
  spush = !git-svn dcommit
  sync = !git pull && git push
  es = !git pull --rebase && git push
  ro = !git fetch origin && git reset --hard origin/master
  ignorechanges = update-index --assume-unchanged
  noticechanges = update-index --no-assume-unchanged
  gc-ap = gc --aggressive --prune
  listconf = config --global --list
  cam = commit -a -m
  scrub = !git reset --hard && git clean -fd
  pubdev = !git pub checkout master && git pull && git checkout dev && git rebase master && git checkout master && git merge dev && git wtf
  pub = push -u origin
  cs = status
  rv = remote -v
  pur = pull --rebase
  whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
  orphank = !gitk --all `git reflog | cut -c1-7`&
  orphanl = !git log --pretty=oneline --abbrev-commit --graph --decorate `git reflog | cut -c1-7`
  k = !exec gitk --all&
  testecho1 = !sh -c 'echo with slash: zero=$0 one=$1 two=$2' -
  # te1 RESULT: with slash: zero=- one=A two=B
  testecho2 = !sh -c 'echo without slash: zero=$0 one=$1 two=$2'
  # te2 RESULT: without slash: zero=A one=B two=C
  purgeme = !git clean -fd && git reset --hard
  prunenow = gc --prune=now
  ri = rebase --interactive --autosquash
  pushnotes = !sh -c 'git push $1 refs/notes/*' -
  fetchnotes = !sh -c 'git fetch $1 refs/notes/*:refs/notes/*' -
  rmmissing = !git rm $(git ls-files --deleted)
  mergekeepoursonly = merge -s ours
  redocommit = reset --soft HEAD^
  fixup = "!sh -c 'git commit -m \"fixup! $(git log -1 --format='\\''%s'\\'' $@)\"' -"
  squash = "!sh -c 'git commit -m \"squash! $(git log -1 --format='\\''%s'\\'' $@)\"' -"
  ccfq = "!sh -c 'git add $1 && git commit -m\"Placeholder\"' -"
  tagcontains = git tag -l --contains HEAD
  rtheirs = !git checkout --theirs ./ && git add . && git rebase --continue
  accept-ours = "!f() { files=\"$@\"; [ -z $files ] && files='.'; git checkout --ours -- $files; git add -u $files; }; f"
  accept-theirs = "!f() { files=\"$@\"; [ -z $files ] && files='.'; git checkout --theirs -- $files; git add -u $files; }; f"
  #https://git.wiki.kernel.org/index.php?title=Aliases
  aliases = !git config --get-regexp 'alias.*' | colrm 1 6 | sed 's/[ ]/ = /'
  graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"
  abbr = "!sh -c 'git rev-list --all | grep ^$1 | while read commit; do git --no-pager log -n1 --pretty=format:\"%H %ci %an %s%n\" $commit; done' -"
  oneline ="!_() { $(test $# -eq 0 && echo xargs -L1) git log --no-walk --decorate --oneline \"$@\"; }; _"
  tips = "!_() { t=$(git rev-list --no-merges --max-count=1 \"$@\"); if test -n \"$t\"; then echo $t; _ \"$@\" ^$t; fi; }; _"
  empty-tree-sha1 = hash-object -t tree /dev/null
  whitespaceviolations = "!git diff --check $(git empty-tree-sha1)"
  patchforthis = "!git diff -p $(git empty-tree-sha1)"

  ###################
  ## diff aliases  ##
  ###################
  d = diff --color-words
  dh = diff HEAD
  dc = diff --staged
  dw = diff --word-diff
  dcw = diff --color-words
  dm = !git diff | mate
  dv = !git diff | vim
  diffall = diff HEAD
  lsignored = clean -ndX
  lsignored2 = ls-files --others --ignored --exclude-standard
  lsuntracked = ls-files --others --exclude-standard
  lsunstaged = diff --name-status
  lsstaged = diff --name-status --staged
  lshistory = log --name-status

  #################
  ## log aliases ##
  #################
  who = shortlog -s --
  lp = log -p
  lod = log --oneline --decorate
  lpo = log --pretty=oneline --abbrev-commit --graph --decorate --all
  lg = log --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --date=relative
  l1 = log --graph --all --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset' --abbrev-commit --date=relative
  lgg = log --graph
  lf = log --pretty=fuller
  lsm = log -M --stat
  hse = log --stat -5
  logr = log -M
  logr2 = log --stat -M -2
  logit = log --stat -M
  lwr = log --stat -C
  l = log --stat -C
  ll = log --stat -C -3
  logm = log --stat -M
  logcpy = log --stat -1 -C -C
  lol2 = log --pretty=oneline --graph --abbrev-commit --all
  lol = log --oneline --graph --decorate
  blg = log --graph --decorate --all --abbrev-commit --pretty=oneline
  slog = log --graph --simplify-by-decoration --all --abbrev-commit --pretty=oneline
  lgso = log --graph --date=short --pretty=format:'%C(yellow)%h%Creset %cn%x09%cd %s%C(green bold)%d'
  busypeople = shortlog -6
  busythisweek = shortlog --since=one.week.ago
  logme = log --author=Eric --stat -C

  ##################
  ## misc aliases ##
  ##################
  configpushtracking = config push.default tracking
  configpushnothing = config push.default nothing
  configpushtracking = config push.default matching
  configpushcurrent = config push.default current
  configpushsimple = config push.default simple
  cc-cache = "config --global credential.helper 'cache --timeout=300'"
  cc-off = "config --unset --global credential.helper"
  cc-helperosx = "config --global credential.helper 'osxkeychain'"
  cc-helperwin = "config --global credential.helper 'wincred'"
  cc-helperlin = "config --global credential.helper '/pathto/git-credential-gnome-key'"
  servehere = daemon --verbose --informative-errors --reuseaddr --export-all --base-path=. --enable=receive-pack

[apply]
  whitespace = nowarn

[rerere]
  enabled = true

[merge]
  keepBackup = false;
  tool = p4merge

[mergetool "p4merge"]
  cmd = p4merge "$BASE" "$LOCAL" "$REMOTE" "$MERGED"
  keepTemporaries = false
  trustExitCode = false
  keepBackup = false

[branch]
  # Automatically set up pull to be --rebase
  #autosetuprebase = always

[github]
  # https://github.com/blog/180-local-github-config
  user = eripa
  #token = MOVEALONG

[push]
  default = simple

[credential]
  helper = osxkeychain
